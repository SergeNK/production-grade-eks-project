ingress:
  ingressClassName: alb
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/certificate-arn: 'arn:aws:acm:us-east-1:278264368218:certificate/9a1632b2-3625-4446-b585-fc1c34878d87'
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
  hosts:
    - host: snjcloud.com
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: vault
              port:
                number: 8200
vault:
  ui:
    enabled: true
  injector:
    enabled: false
  server:
    logLevel: info
    serviceAccount:
      annotations:
        eks.amazonaws.com/role-arn: "arn:aws:iam::278264368218:role/central-vault-cluster"
    ingress:
      enabled: false
    ha:
      enabled: true
      replicas: 3
      config: |
        disable_mlock = true
        plugin_directory = "/vault/plugins/"
        ui = true
        
        listener "tcp" {
          tls_disable = 1
          address = "[::]:8200"
          cluster_address = "[::]:8201"
          telemetry {
            unauthenticated_metrics_access = "true"
          }
        }
        seal "awskms" {
          region = "us-east-1"
          kms_key_id = "eed4c878-1ac2-4202-a065-052f089a5d15"
        }
        storage "dynamodb" {
          ha_enabled = "true"
          region     = "us-east-1"
          table      = "vault-backend-prod"
        }
        telemetry {
          prometheus_retention_time = "12h",
          disable_hostname = true
        }

    podDisruptionBudget:
      maxUnavailable: 1

    tolerations:
      - key: workerType
        operator: Equal
        value: vault
        effect: NoSchedule
    nodeSelector:
      nodeType: vault-worker
